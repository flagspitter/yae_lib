前提として、
・OSの有無は問いません。そのため、ブロッキングしないことを前提としています。
・コマンドの動的追加やファイルシステムは考慮しません。

シェルを使用するためには、次の処理が必要です。

(1) 入出力関数の準備
シリアルでもTCPでも区別はなく、次の3つの関数が必要です。
  - 1文字入力する関数
  - 1文字出力する関数
  - 入力の有無を確認する関数
これらの関数は、基本的にブロッキングされないことを前提としています。
出力に関しては、バッファフル等の場合はブロッキングしてもかまいません。

(2) コマンド一覧とコマンド関数
コマンド一覧は、コマンド名と対応する関数ポインタを組にした構造体の配列です。
最終要素は NULL, NULL してください。
コマンドに対応する関数は、次の引数を持ちます。
  - シェルのハンドル → 出力関数に使用します
  - int argc, char *argv[] → main関数と同じです

(3) ハンドルの登録
sh_Open関数で、シェルのハンドルを用意します。
ハンドルと、上記コマンド一覧、入出力関数、任意に使用できるポインタ
及び、初期化時に実行する関数を渡します。

(4) sh_Tick関数を定期的に実行する
